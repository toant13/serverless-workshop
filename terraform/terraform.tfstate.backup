{
    "version": 3,
    "terraform_version": "0.9.3",
    "serial": 39,
    "lineage": "b6dfbe00-4c81-4768-84fc-dca1539b6096",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_api_gateway_authorizer.custom-authorizer": {
                    "type": "aws_api_gateway_authorizer",
                    "depends_on": [
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video",
                        "aws_lambda_function.serverless-custom-authorizer-lambda"
                    ],
                    "primary": {
                        "id": "418rtf",
                        "attributes": {
                            "authorizer_credentials": "",
                            "authorizer_result_ttl_in_seconds": "300",
                            "authorizer_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893483352847:function:custom-authorizer/invocations",
                            "id": "418rtf",
                            "identity_source": "method.request.header.Authorization",
                            "identity_validation_expression": "",
                            "name": "custom-authorizer",
                            "rest_api_id": "wbbhmymtal",
                            "type": "TOKEN"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_api_gateway_method.api-gateway-method-s3-policy-document": {
                    "type": "aws_api_gateway_method",
                    "depends_on": [
                        "aws_api_gateway_resource.api-resource-s3-policy-document",
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video"
                    ],
                    "primary": {
                        "id": "agm-wbbhmymtal-yg41f7-GET",
                        "attributes": {
                            "api_key_required": "false",
                            "authorization": "NONE",
                            "authorizer_id": "",
                            "http_method": "GET",
                            "id": "agm-wbbhmymtal-yg41f7-GET",
                            "request_models.%": "0",
                            "request_parameters.%": "0",
                            "resource_id": "yg41f7",
                            "rest_api_id": "wbbhmymtal"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_api_gateway_method.api-gateway-method-user-profile": {
                    "type": "aws_api_gateway_method",
                    "depends_on": [
                        "aws_api_gateway_authorizer.custom-authorizer",
                        "aws_api_gateway_resource.api-resource-user-profile",
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video"
                    ],
                    "primary": {
                        "id": "agm-wbbhmymtal-qh9ika-GET",
                        "attributes": {
                            "api_key_required": "false",
                            "authorization": "CUSTOM",
                            "authorizer_id": "418rtf",
                            "http_method": "GET",
                            "id": "agm-wbbhmymtal-qh9ika-GET",
                            "request_models.%": "0",
                            "request_parameters.%": "0",
                            "resource_id": "qh9ika",
                            "rest_api_id": "wbbhmymtal"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_api_gateway_resource.api-resource-s3-policy-document": {
                    "type": "aws_api_gateway_resource",
                    "depends_on": [
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video"
                    ],
                    "primary": {
                        "id": "yg41f7",
                        "attributes": {
                            "id": "yg41f7",
                            "parent_id": "hdks0ntbq8",
                            "path": "/s3-policy-document",
                            "path_part": "s3-policy-document",
                            "rest_api_id": "wbbhmymtal"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_api_gateway_resource.api-resource-user-profile": {
                    "type": "aws_api_gateway_resource",
                    "depends_on": [
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video"
                    ],
                    "primary": {
                        "id": "qh9ika",
                        "attributes": {
                            "id": "qh9ika",
                            "parent_id": "hdks0ntbq8",
                            "path": "/user-profile",
                            "path_part": "user-profile",
                            "rest_api_id": "wbbhmymtal"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_api_gateway_rest_api.api-gateway-24-hour-video": {
                    "type": "aws_api_gateway_rest_api",
                    "depends_on": [
                        "aws_lambda_function.serverless-user-profile-lambda"
                    ],
                    "primary": {
                        "id": "wbbhmymtal",
                        "attributes": {
                            "binary_media_types.#": "0",
                            "created_date": "2017-05-11T02:33:50Z",
                            "description": "24-hour-video-api",
                            "id": "wbbhmymtal",
                            "name": "24-Hour-Video",
                            "root_resource_id": "hdks0ntbq8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_elastictranscoder_pipeline.serverless-elastic-transcoder": {
                    "type": "aws_elastictranscoder_pipeline",
                    "depends_on": [
                        "aws_iam_role.elastic-transcoder-execution-role",
                        "aws_s3_bucket.serverless-video-transcoded",
                        "aws_s3_bucket.serverless-video-upload"
                    ],
                    "primary": {
                        "id": "1494191301039-x2oqla",
                        "attributes": {
                            "arn": "arn:aws:elastictranscoder:us-east-1:893483352847:pipeline/1494191301039-x2oqla",
                            "content_config.#": "1",
                            "content_config.1779451393.bucket": "serverlessconf-video-transcoded",
                            "content_config.1779451393.storage_class": "Standard",
                            "content_config_permissions.#": "0",
                            "id": "1494191301039-x2oqla",
                            "input_bucket": "serverlessconf-video-upload",
                            "name": "24-hour-video",
                            "output_bucket": "serverlessconf-video-transcoded",
                            "role": "arn:aws:iam::893483352847:role/24-hour-video-dev",
                            "thumbnail_config.#": "1",
                            "thumbnail_config.1779451393.bucket": "serverlessconf-video-transcoded",
                            "thumbnail_config.1779451393.storage_class": "Standard",
                            "thumbnail_config_permissions.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_access_key.upload-s3-key": {
                    "type": "aws_iam_access_key",
                    "depends_on": [
                        "aws_iam_user.upload-s3"
                    ],
                    "primary": {
                        "id": "AKIAIN2BWIBBFYKKNFUQ",
                        "attributes": {
                            "id": "AKIAIN2BWIBBFYKKNFUQ",
                            "secret": "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",
                            "ses_smtp_password": "AtgoZCpHSjvPdNk6C8f4HfjAHBNTZvdfVNNPY88ZKGOr",
                            "status": "Active",
                            "user": "upload-s3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy_attachment.AWS-API-Gateway-lsLambda-Execute-Manage-Policy": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.api-gateway-lambda-exec-role"
                    ],
                    "primary": {
                        "id": "AWS-Lambda-Execute-Manage-Policy",
                        "attributes": {
                            "groups.#": "0",
                            "id": "AWS-Lambda-Execute-Manage-Policy",
                            "name": "AWS-Lambda-Execute-Manage-Policy",
                            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            "roles.#": "1",
                            "roles.4136187679": "api-gateway-lambda-exec-role-dev",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy_attachment.AWS-Elastic-Transcoder-Jobs-Submitter-Manage-Policy": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.lambda-s3-execution-role"
                    ],
                    "primary": {
                        "id": "AWS-Elastic-Transcoder-Jobs-Submitter-Manage-Policy",
                        "attributes": {
                            "groups.#": "0",
                            "id": "AWS-Elastic-Transcoder-Jobs-Submitter-Manage-Policy",
                            "name": "AWS-Elastic-Transcoder-Jobs-Submitter-Manage-Policy",
                            "policy_arn": "arn:aws:iam::aws:policy/AmazonElasticTranscoderJobsSubmitter",
                            "roles.#": "1",
                            "roles.3861112128": "lambda-s3-execution-role-dev",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy_attachment.AWS-Lambda-Execute-Manage-Policy": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.lambda-s3-execution-role"
                    ],
                    "primary": {
                        "id": "AWS-Lambda-Execute-Manage-Policy",
                        "attributes": {
                            "groups.#": "0",
                            "id": "AWS-Lambda-Execute-Manage-Policy",
                            "name": "AWS-Lambda-Execute-Manage-Policy",
                            "policy_arn": "arn:aws:iam::aws:policy/AWSLambdaExecute",
                            "roles.#": "1",
                            "roles.3861112128": "lambda-s3-execution-role-dev",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.api-gateway-lambda-exec-role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "api-gateway-lambda-exec-role-dev",
                        "attributes": {
                            "arn": "arn:aws:iam::893483352847:role/api-gateway-lambda-exec-role-dev",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-05-11T02:50:29Z",
                            "id": "api-gateway-lambda-exec-role-dev",
                            "name": "api-gateway-lambda-exec-role-dev",
                            "path": "/",
                            "unique_id": "AROAJMKTZNOWYF5CWYBG4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.elastic-transcoder-execution-role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "24-hour-video-dev",
                        "attributes": {
                            "arn": "arn:aws:iam::893483352847:role/24-hour-video-dev",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"elastictranscoder.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-05-07T21:08:14Z",
                            "id": "24-hour-video-dev",
                            "name": "24-hour-video-dev",
                            "path": "/",
                            "unique_id": "AROAIAOJYCWN7XHONVIQE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.lambda-s3-execution-role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "lambda-s3-execution-role-dev",
                        "attributes": {
                            "arn": "arn:aws:iam::893483352847:role/lambda-s3-execution-role-dev",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-05-07T21:08:14Z",
                            "id": "lambda-s3-execution-role-dev",
                            "name": "lambda-s3-execution-role-dev",
                            "path": "/",
                            "unique_id": "AROAIB34BAYA3TBSFKC5U"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy.LeadAuthParkHandlerPermissionPolicies": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.elastic-transcoder-execution-role"
                    ],
                    "primary": {
                        "id": "24-hour-video-dev:ets-console-generated-policy",
                        "attributes": {
                            "id": "24-hour-video-dev:ets-console-generated-policy",
                            "name": "ets-console-generated-policy",
                            "policy": "{\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:Put*\",\n        \"s3:ListBucket\",\n        \"s3:*MultipartUpload*\",\n        \"s3:Get*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\",\n      \"Sid\": \"1\"\n    },\n    {\n      \"Action\": \"sns:Publish\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\",\n      \"Sid\": \"2\"\n    },\n    {\n      \"Action\": [\n        \"s3:*Delete*\",\n        \"s3:*Policy*\",\n        \"sns:*Remove*\",\n        \"sns:*Delete*\",\n        \"sns:*Permission*\"\n      ],\n      \"Effect\": \"Deny\",\n      \"Resource\": \"*\",\n      \"Sid\": \"3\"\n    }\n  ],\n  \"Version\": \"2008-10-17\"\n}\n",
                            "role": "24-hour-video-dev"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_user.upload-s3": {
                    "type": "aws_iam_user",
                    "depends_on": [],
                    "primary": {
                        "id": "upload-s3",
                        "attributes": {
                            "arn": "arn:aws:iam::893483352847:user/upload-s3",
                            "force_destroy": "false",
                            "id": "upload-s3",
                            "name": "upload-s3",
                            "path": "/",
                            "unique_id": "AIDAJMCMBBPMNZI5MQ5NK"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_user_policy.upload-policy": {
                    "type": "aws_iam_user_policy",
                    "depends_on": [
                        "aws_iam_user.upload-s3",
                        "aws_s3_bucket.serverless-video-upload"
                    ],
                    "primary": {
                        "id": "upload-s3:upload-policy",
                        "attributes": {
                            "id": "upload-s3:upload-policy",
                            "name": "upload-policy",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::serverlessconf-video-upload\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::serverlessconf-video-upload/*\"\n            ]\n        }\n    ]\n}\n",
                            "user": "upload-s3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_function.serverless-custom-authorizer-lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.api-gateway-lambda-exec-role"
                    ],
                    "primary": {
                        "id": "custom-authorizer",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:893483352847:function:custom-authorizer",
                            "dead_letter_config.#": "0",
                            "description": "custom authorizer",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.AUTH0_SECRET": "OkCdmhb-YjOlBpe3n0tmVpjScmO6f41x75uH-qs-NMXORnDMIs16u_nClpqtNIM0",
                            "filename": "../lab-3/lambda/custom-authoriser/Lambda-Deployment.zip",
                            "function_name": "custom-authorizer",
                            "handler": "index.handler",
                            "id": "custom-authorizer",
                            "kms_key_arn": "",
                            "last_modified": "2017-05-11T04:15:11.702+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:893483352847:function:custom-authorizer:$LATEST",
                            "role": "arn:aws:iam::893483352847:role/api-gateway-lambda-exec-role-dev",
                            "runtime": "nodejs6.10",
                            "source_code_hash": "kRLm46YZI3skpARPEAKmD6SPmuiHNlsp63g2Bhazv+Q=",
                            "timeout": "80",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_function.serverless-get-upload-policy-lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_access_key.upload-s3-key",
                        "aws_iam_role.lambda-s3-execution-role",
                        "aws_iam_user.upload-s3",
                        "aws_s3_bucket.serverless-video-upload"
                    ],
                    "primary": {
                        "id": "get-upload-policy",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:893483352847:function:get-upload-policy",
                            "dead_letter_config.#": "0",
                            "description": "upload policy",
                            "environment.#": "1",
                            "environment.0.variables.%": "3",
                            "environment.0.variables.ACCESS_KEY_ID": "AKIAIN2BWIBBFYKKNFUQ",
                            "environment.0.variables.SECRET_ACCESS_KEY": "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",
                            "environment.0.variables.UPLOAD_BUCKET": "serverlessconf-video-upload",
                            "filename": "../lab-4/lambda/create-s3-upload-policy-document/Lambda-Deployment.zip",
                            "function_name": "get-upload-policy",
                            "handler": "index.handler",
                            "id": "get-upload-policy",
                            "kms_key_arn": "",
                            "last_modified": "2017-05-11T04:30:30.639+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:893483352847:function:get-upload-policy:$LATEST",
                            "role": "arn:aws:iam::893483352847:role/lambda-s3-execution-role-dev",
                            "runtime": "nodejs6.10",
                            "source_code_hash": "c8d26dxF/ntPo+gmIRcoWvn7kCt1oVugEqp8zDTAaaY=",
                            "timeout": "80",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_function.serverless-push-transcoded-url-to-firebase-lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.lambda-s3-execution-role",
                        "aws_iam_user.upload-s3",
                        "aws_s3_bucket.serverless-video-transcoded"
                    ],
                    "primary": {
                        "id": "push-transcoded-url-to-firebase",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:893483352847:function:push-transcoded-url-to-firebase",
                            "dead_letter_config.#": "0",
                            "description": "push transcoded",
                            "environment.#": "1",
                            "environment.0.variables.%": "4",
                            "environment.0.variables.BUCKET_REGION": "us-east-1",
                            "environment.0.variables.DATABASE_URL": "https://serverless-workshop-3b5cd.firebaseio.com/",
                            "environment.0.variables.S3": "serverlessconf-video-transcoded",
                            "environment.0.variables.SERVICE_ACCOUNT": "serverless-workshop-8ac59be5a83f.json",
                            "filename": "../lab-5/lambda/push-transcoded-url-to-firebase/Lambda-Deployment.zip",
                            "function_name": "push-transcoded-url-to-firebase",
                            "handler": "index.handler",
                            "id": "push-transcoded-url-to-firebase",
                            "kms_key_arn": "",
                            "last_modified": "2017-05-11T05:24:17.499+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:893483352847:function:push-transcoded-url-to-firebase:$LATEST",
                            "role": "arn:aws:iam::893483352847:role/lambda-s3-execution-role-dev",
                            "runtime": "nodejs6.10",
                            "source_code_hash": "+IhpSIfb7I6gn1mp0av2aBZsfxNV1QjvdT6/rblYOd8=",
                            "timeout": "80",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_function.serverless-transcode-video-lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_elastictranscoder_pipeline.serverless-elastic-transcoder",
                        "aws_iam_role.lambda-s3-execution-role"
                    ],
                    "primary": {
                        "id": "transcode-video",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:893483352847:function:transcode-video",
                            "dead_letter_config.#": "0",
                            "description": "transcodes videos from upload bucket and then puts them into the transcode bucket",
                            "environment.#": "1",
                            "environment.0.variables.%": "4",
                            "environment.0.variables.DATABASE_URL": "https://serverless-workshop-3b5cd.firebaseio.com/",
                            "environment.0.variables.ELASTIC_TRANSCODER_PIPELINE_ID": "1494191301039-x2oqla",
                            "environment.0.variables.ELASTIC_TRANSCODER_REGION": "us-east-1",
                            "environment.0.variables.SERVICE_ACCOUNT": "serverless-workshop-8ac59be5a83f.json",
                            "filename": "../lab-5/lambda/transcode-video-firebase-enabled/Lambda-Deployment.zip",
                            "function_name": "transcode-video",
                            "handler": "index.handler",
                            "id": "transcode-video",
                            "kms_key_arn": "",
                            "last_modified": "2017-05-11T05:14:08.306+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:893483352847:function:transcode-video:$LATEST",
                            "role": "arn:aws:iam::893483352847:role/lambda-s3-execution-role-dev",
                            "runtime": "nodejs6.10",
                            "source_code_hash": "F8coPOGFF+zlhltVdxUdj+QRPBXYzNVhC5/FyTlS9po=",
                            "timeout": "80",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_function.serverless-user-profile-lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.lambda-s3-execution-role"
                    ],
                    "primary": {
                        "id": "user-profile",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:893483352847:function:user-profile",
                            "dead_letter_config.#": "0",
                            "description": "talks to Auth0 and retrieves user info",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.AUTH0_DOMAIN": "ttran.auth0.com",
                            "filename": "../lab-3/lambda/user-profile/Lambda-Deployment.zip",
                            "function_name": "user-profile",
                            "handler": "index.handler",
                            "id": "user-profile",
                            "kms_key_arn": "",
                            "last_modified": "2017-05-11T04:15:10.915+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:893483352847:function:user-profile:$LATEST",
                            "role": "arn:aws:iam::893483352847:role/lambda-s3-execution-role-dev",
                            "runtime": "nodejs6.10",
                            "source_code_hash": "D3OK8H+xDuJGrVppdtbYSiHF5bc4lgz7DlCJz6Z7E4A=",
                            "timeout": "80",
                            "version": "$LATEST",
                            "vpc_config.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_permission.api-gateway-trigger-user-profile": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_api_gateway_method.api-gateway-method-user-profile",
                        "aws_api_gateway_rest_api.api-gateway-24-hour-video",
                        "aws_lambda_function.serverless-user-profile-lambda",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromAPIGateway",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "arn:aws:lambda:us-east-1:893483352847:function:user-profile",
                            "id": "AllowExecutionFromAPIGateway",
                            "principal": "apigateway.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:execute-api:us-east-1:893483352847:wbbhmymtal/*/GET/resourcepath/subresourcepath",
                            "statement_id": "AllowExecutionFromAPIGateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_permission.serverless-video-transcoded-lambda-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.serverless-push-transcoded-url-to-firebase-lambda",
                        "aws_s3_bucket.serverless-video-transcoded"
                    ],
                    "primary": {
                        "id": "serverless-video-transcoded-lambda-permission",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "push-transcoded-url-to-firebase",
                            "id": "serverless-video-transcoded-lambda-permission",
                            "principal": "s3.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:s3:::serverlessconf-video-transcoded",
                            "statement_id": "serverless-video-transcoded-lambda-permission"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_lambda_permission.serverless-video-upload-lambda-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.serverless-transcode-video-lambda",
                        "aws_s3_bucket.serverless-video-upload"
                    ],
                    "primary": {
                        "id": "serverless-video-upload-lambda-permission",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "transcode-video",
                            "id": "serverless-video-upload-lambda-permission",
                            "principal": "s3.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:s3:::serverlessconf-video-upload",
                            "statement_id": "serverless-video-upload-lambda-permission"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket.serverless-video-transcoded": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "serverlessconf-video-transcoded",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::serverlessconf-video-transcoded",
                            "bucket": "serverlessconf-video-transcoded",
                            "bucket_domain_name": "serverlessconf-video-transcoded.s3.amazonaws.com",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "serverlessconf-video-transcoded",
                            "logging.#": "0",
                            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"arn:aws:s3:::serverlessconf-video-transcoded/*\",\"Sid\":\"AddPerm\"}],\"Version\":\"2012-10-17\"}",
                            "region": "us-east-1",
                            "request_payer": "BucketOwner",
                            "tags.%": "2",
                            "tags.Environment": "dev",
                            "tags.Name": "serverless-video-transcoded-s3-bucket",
                            "versioning.#": "1",
                            "versioning.0.enabled": "true",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket.serverless-video-upload": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "serverlessconf-video-upload",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::serverlessconf-video-upload",
                            "bucket": "serverlessconf-video-upload",
                            "bucket_domain_name": "serverlessconf-video-upload.s3.amazonaws.com",
                            "cors_rule.#": "1",
                            "cors_rule.0.allowed_headers.#": "1",
                            "cors_rule.0.allowed_headers.0": "*",
                            "cors_rule.0.allowed_methods.#": "2",
                            "cors_rule.0.allowed_methods.0": "GET",
                            "cors_rule.0.allowed_methods.1": "POST",
                            "cors_rule.0.allowed_origins.#": "1",
                            "cors_rule.0.allowed_origins.0": "*",
                            "cors_rule.0.expose_headers.#": "0",
                            "cors_rule.0.max_age_seconds": "3000",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "serverlessconf-video-upload",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "request_payer": "BucketOwner",
                            "tags.%": "2",
                            "tags.Environment": "dev",
                            "tags.Name": "serverless-video-upload-s3-bucket",
                            "versioning.#": "1",
                            "versioning.0.enabled": "true",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket_notification.bucket_notification": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_lambda_function.serverless-transcode-video-lambda",
                        "aws_s3_bucket.serverless-video-upload"
                    ],
                    "primary": {
                        "id": "serverlessconf-video-upload",
                        "attributes": {
                            "bucket": "serverlessconf-video-upload",
                            "id": "serverlessconf-video-upload",
                            "lambda_function.#": "1",
                            "lambda_function.0.events.#": "1",
                            "lambda_function.0.events.3356830603": "s3:ObjectCreated:*",
                            "lambda_function.0.filter_prefix": "",
                            "lambda_function.0.filter_suffix": "",
                            "lambda_function.0.id": "tf-s3-lambda-00cd7849aba7a9dac8b5b9bbba",
                            "lambda_function.0.lambda_function_arn": "arn:aws:lambda:us-east-1:893483352847:function:transcode-video",
                            "queue.#": "0",
                            "topic.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_s3_bucket_notification.transcoded-bucket_notification": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_lambda_function.serverless-push-transcoded-url-to-firebase-lambda",
                        "aws_s3_bucket.serverless-video-transcoded"
                    ],
                    "primary": {
                        "id": "serverlessconf-video-transcoded",
                        "attributes": {
                            "bucket": "serverlessconf-video-transcoded",
                            "id": "serverlessconf-video-transcoded",
                            "lambda_function.#": "1",
                            "lambda_function.0.events.#": "1",
                            "lambda_function.0.events.3356830603": "s3:ObjectCreated:*",
                            "lambda_function.0.filter_prefix": "",
                            "lambda_function.0.filter_suffix": ".mp4",
                            "lambda_function.0.id": "tf-s3-lambda-000d28fcdf38664f58111edde6",
                            "lambda_function.0.lambda_function_arn": "arn:aws:lambda:us-east-1:893483352847:function:push-transcoded-url-to-firebase",
                            "queue.#": "0",
                            "topic.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_caller_identity.current": {
                    "type": "aws_caller_identity",
                    "depends_on": [],
                    "primary": {
                        "id": "2017-05-11 05:28:50.558147239 +0000 UTC",
                        "attributes": {
                            "account_id": "893483352847",
                            "arn": "arn:aws:iam::893483352847:root",
                            "id": "2017-05-11 05:28:50.558147239 +0000 UTC",
                            "user_id": "893483352847"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
